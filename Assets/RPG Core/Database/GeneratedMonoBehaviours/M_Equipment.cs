using System;
using System.Collections.Generic;
using UnityEngine;
using BansheeGz.BGDatabase;
using Alias_rifegrt_InventorySlot = M_InventorySlot;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

[AddComponentMenu("BansheeGz/Generated/M_Equipment")]
public partial class M_Equipment : BGEntityGo
{
	public override BGMetaEntity MetaConstraint => MetaDefault;
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5605810299190173334UL,3330426579226064771UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public System.String f_name
	{
		get => _f_name[Entity.Index];
		set => _f_name[Entity.Index] = value;
	}
	public UnityEngine.Sprite f_Icon => _f_Icon[Entity.Index];
	public System.String f_Description => _f_Description[Entity.Index];
	public System.Int32 f_Cost => _f_Cost[Entity.Index];
	public System.Int32 f_MaxStackSize => _f_MaxStackSize[Entity.Index];
	public System.String f_Type => _f_Type[Entity.Index];
	public RPGCore.Item.EquipmentTypes f_ValidEquipmentSlot
	{
		get => (RPGCore.Item.EquipmentTypes) _f_ValidEquipmentSlot.GetStoredValue(Entity.Index);
		set => _f_ValidEquipmentSlot.SetStoredValue(Entity.Index, (System.Int32) value);
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5563065504845569156UL, 6346368547976605101UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldUnitySprite _ufle12jhs77_f_Icon;
	public static BansheeGz.BGDatabase.BGFieldUnitySprite _f_Icon => _ufle12jhs77_f_Icon ?? (_ufle12jhs77_f_Icon = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldUnitySprite>(MetaDefault, new BGId(4882728246603021359UL, 412962952239157148UL), () => _ufle12jhs77_f_Icon = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_f_Description;
	public static BansheeGz.BGDatabase.BGFieldString _f_Description => _ufle12jhs77_f_Description ?? (_ufle12jhs77_f_Description = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5007353106188511073UL, 9035780179547936940UL), () => _ufle12jhs77_f_Description = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_Cost;
	public static BansheeGz.BGDatabase.BGFieldInt _f_Cost => _ufle12jhs77_f_Cost ?? (_ufle12jhs77_f_Cost = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4900190774773693727UL, 11402466015859839629UL), () => _ufle12jhs77_f_Cost = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_MaxStackSize;
	public static BansheeGz.BGDatabase.BGFieldInt _f_MaxStackSize => _ufle12jhs77_f_MaxStackSize ?? (_ufle12jhs77_f_MaxStackSize = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4866348983337843519UL, 13803220371409492130UL), () => _ufle12jhs77_f_MaxStackSize = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_f_Type;
	public static BansheeGz.BGDatabase.BGFieldString _f_Type => _ufle12jhs77_f_Type ?? (_ufle12jhs77_f_Type = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4631598031163933063UL, 9807612687087977648UL), () => _ufle12jhs77_f_Type = null));
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_f_ValidEquipmentSlot;
	public static BansheeGz.BGDatabase.BGFieldEnum _f_ValidEquipmentSlot => _ufle12jhs77_f_ValidEquipmentSlot ?? (_ufle12jhs77_f_ValidEquipmentSlot = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEnum>(MetaDefault, new BGId(5663329559119876475UL, 11263970795279056270UL), () => _ufle12jhs77_f_ValidEquipmentSlot = null));
	public List<BGEntity> RelatedInventorySlotListUsingItemRelation => BGCodeGenUtils.GetRelatedInbound<BansheeGz.BGDatabase.BGEntity>(Alias_rifegrt_InventorySlot._f_Item, Entity.Id);
}
